
PURPOSE:    uses custom.scss

:::aside
Date:  Set programmatically?
:::

::::aside
keep a secret? USE {.hidden}

:::{.hidden}
This is secret
:::

::::

:::{.infobox}
HELLO infobox
:::

```{=html}
<style>


#title-block-header {
  margin-block-end: 1rem;
  position: relative;
  margin-top: -1px;
  height: 75px;
}
.quarto-title-banner {
  margin-block-end: 1rem;
  position: relative;
  margin-top: -30px;
  height: 85%;
}
.myDiv {
  border: 5px outset red;
  background-color: lightblue;
  text-align: center;
}

.infobox {
  width: 200 px;
  .message {
    border: 1px solid red;
    }
    }
.blackbox {
  padding: 1em;
  background: black;
  color: white;
  border: 2px solid orange;
  border-radius: 10px;
}

.greybox {
  padding: 1em;
  background: grey;
  color: white;
  border: 2px solid orange;
  border-radius: 10px;
}

.center {
  text-align: center;
}
</style>
```
::: myDiv
PURPOSE: Collect of HTML and PDF inline commands to control output

    markdown does NOT offer all tools (ex: change color)
    best to avoid direct HTML insertion, use tools:
*   knitr:: can be useful   functions: <https://cran.r-project.org/web/packages/knitr/knitr.pdf>
*   rmarkdown cookbook: <https://bookdown.org/yihui/rmarkdown-cookbook/>
*   markdown:: adds to rmarkdown: <link>
*   Mimi:  videos
*   Pandoc's version of markdown:  <link>
*   Bootstrap:   predefined `class` <https://getbootstrap.com/docs/3.4/css/#helper-classes>

    in YAML, use `date`, fails in YAML: `r format(Sys.time(), '%d %B %Y')`

NOTE: No documentation here
:::

:::aside
SEE References
:::

#   Header 1
##  Header 2
### Header 3

## Quarto: Examples for HTML, PDF {style="color: lime"}

***

------------------------------------------------------------------------

<font size="1"> Very small </font>


### Inline {style="color: black"}

We can apply styles to a sentence or a word by creating spans using `[]` to surround the sentence or word that we want to style and use `{}` to define the style that we want to apply. For example,

The color of this word is [red]{style="color: red;"}. And [this line has a yellow background]{style="background-color: yellow"}.

------------------------------------------------------------------------

### Create a footnote: 

Need footnote one here: [^1]

[^1]: This is footnote one.

::: {.content-visible when-format="html"}
:::

------------------------------------------------------------------------

### 
::: callout-note
future callout note!
:::

```{r}
#| label: mtcars
head(mtcars, n=2)
```         

### Display code and chunk options
```{r}
#| label: example
#| code-line-numbers: "|5|6"
#| echo: fenced # shows these options in output
x  <- 1
y  <- 2
x+y
```

***

::: {.content-visible when-format="pdf"}

TODO pdf - fix greater than equa
  pdf: 
    toc: false
    include-in-header: 
      text: |
        \usepackage[top=.5in, bottom=.5in, left=.7in, right=.5in]{geometry}
        \usepackage{amsmath,amssymb,amstext,amsfonts}
        \usepackage{lipsum}
:::


::: {.content-visible when-format="pdf"}
Will only appear in PDF.
\renewcommand{\familydefault}{\sfdefault}
\section{R Definitions \& Examples   (TERSE)}
\section{Manuals}
\\section(Definitions}
:::


***

### Create a class
```
create class "myColor" | use in paragraph | and div block| 
```

<style>

.myColor {
  color:blue;
}
</style>

<p class="myColor"> myColor  </p>

::: {class="myColor"}
 !-- {{< include _future_work.qmd >}} -->
:::

***

::: {.content-visible when-format="html"}

HTML
:::
    
 ***

## Acknowledgments {.appendix}
I am grateful for the insightful comments offered by the anonymous peer reviewers at Books & Texts. The generosity and expertise of one and all have improved this study in innumerable ways and saved me from many errors; those that inevitably remain are entirely my own responsibility.


***

Example of Bootstrap classes:
```{r class.source="bg-danger", class.output="bg-warning"}
mtcars[1:5, "mpg"]
```
To make sure that we always get a data frame, we have to use
the argument `drop = FALSE`. Now we use the chunk option
`class.source = "bg-success"`.

```{r df-drop-ok, class.source="bg-success"}
mtcars[1:5, "mpg", drop = FALSE]
```
***

### Header with class {class="myColor"}

***

### Annotate code and create code to change font color:

Use knitr to create <span> for red font,  rmarkdown cookbook 5.1
```{r}
col = function(text, color){           # <1>
    if (knitr::is_html_output()) {     # <2> 
        sprintf("<span style='color:%s'> %s </span>", color, text )
    }
}
```
1. Annotate line 1
2. Annotate line 2

`r col("Is this red", "red")`
 
***

### Fancy Theorems 
::: {.column-margin}
We know from *the first fundamental theorem of calculus* that for $x$ in $[a, b]$:

$$\frac{d}{dx}\left( \int_{a}^{x} f(u)\,du\right)=f(x).$$
:::

***

### Custom Blocks (rmarkdown-9.6)

::: aside
An aside
:::

::: {#hello .greeting .message style="color: lime;"}
Hello **world**!
:::

***

### Box (rmarkdown-book 9.6)

```{r class="blackbox"}
mtcars[1:3, 1:2]

```

```{r class="greybox"}
mtcars[1:3, 1:2]

```
***

:::{#special .sidebar}
This does what?
:::


