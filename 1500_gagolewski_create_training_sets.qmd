

----------------------------------------------------------------------
PURPOSE:   Given a df, select a random sample of rows (for train/test)
REF:   
https://archive.ics.uci.edu/dataset/186/wine+quality
Gagolewski:  KNN
https://lmlcr.gagolewski.com/classification-with-k-nearest-neighbours.html#k-nearest-neighbour-classifier
----------------------------------------------------------------------

### Note:  separator is ";"
```{r}
wines  <- read.csv("data/winequality-white.csv", comment.char="#", sep=";")
dim(wines)
(n <- nrow(wines)) # number of samples

wines  <- as_tibble(wines)
head(wines)
names(wines)
#  [1] "fixed.acidity"        "volatile.acidity"     "citric.acid"         
#  [4] "residual.sugar"       "chlorides"            "free.sulfur.dioxide" 
#  [7] "total.sulfur.dioxide" "density"              "pH"                  
# [10] "sulphates"            "alcohol"              "quality"             
```
### Goal:  Model 'alcohol' as 0 or 1 (if alchol > 12%)
```{r}
wines[1:2, c(11)]
wines[1:20, "alcohol"]
str(wines)

# recall that TRUE == 1 (as.numeric forces T/F to be 1/0)
Y <- factor(as.character(as.numeric(wines$alcohol >= 12)))
Y <- factor(as.character((wines$alcohol >= 12)))
table(Y)
# Y
#    0    1 
# 4085  813 
```


### Random indices
```{r}
set.seed(123) # reproducibility matters

#   interpetes as 1:n, permute the indices in random order
random_indices <- sample(n)
length(random_indices) # [1] 4898

head(random_indices) # preview
```

### For training, only first 10 columns; take 60% of rows (random)
```{r}
X  <-  wines[, 1:10]

#   60% of rows
X_train  <- X[floor(random_indices*0.6),]      # lowest int 
dim(X_train)
```





